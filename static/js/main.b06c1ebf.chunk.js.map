{"version":3,"sources":["App.js","helpers/helpers.js","reportWebVitals.js","index.js"],"names":["App","useState","pancard","setPanCard","className","onSubmit","e","preventDefault","test","alert","placeholder","type","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA+BeA,MAzBf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,KAab,OACE,sBAAKC,UAAU,MAAf,UACE,gDACA,uBACA,oDACA,sBAAMC,SAdc,SAACC,GACvBA,EAAEC,iBCVU,0CACHC,KDUYN,GACnBO,MAAM,GAAD,OAAIP,EAAJ,2BAELO,MAAM,2BASN,SACI,uBAAOL,UAAU,YAAYM,YAAY,4BAA4BC,KAAK,OAAOC,MAAOV,EAASW,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOF,gBEbjIG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b06c1ebf.chunk.js","sourcesContent":["import {useState} from 'react';\nimport {\n  pancardValidation\n} from './helpers/helpers';\nimport './App.css';\n\nfunction App() {\n  const [pancard, setPanCard] = useState('');\n\n  // console.log(pancardValidation('ABCDE1234F'));\n  const validatePancard = (e) => {\n    e.preventDefault();\n    if(pancardValidation(pancard)) {\n      alert(`${pancard} is a valid PAN Number`)\n    } else {\n      alert('Please enter valid PAN');\n    }\n    \n  }\n  return (\n    <div className=\"App\">\n      <h1>React Workshop</h1>\n      <hr/>\n      <h2>Pancard Validation</h2>\n      <form onSubmit={validatePancard}>\n          <input className=\"textInput\" placeholder=\"enter PAN and press enter\" type=\"text\" value={pancard} onChange={(e) => setPanCard(e.target.value)}/>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","export const pancardValidation = (text) => {\n    let regex = /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}?$/;\n    if(regex.test(text)) {\n        return true;\n    }\n    return false;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}